스프링 컨테이너가 메모리에 올라오면 스프링 빈 등록 절차

동작흐름이 
controller -> service -> repository 같은 구조임

컨트롤러와 서비스 생성자정의에서 @Autowired를 묶어준다.

스프링이 객체를 생성하고 주입하는 객체생성순서
1️⃣ MemoryMemberRepository (@Repository) 생성됨
2️⃣ MemberService (@Service) 생성됨 → MemoryMemberRepository가 주입됨
3️⃣ MemberController (@Controller) 생성됨 → MemberService가 주입됨

➡ 이렇게 하면 MemberController에서 MemberService를 사용할 수 있고, MemberService는 MemberRepository를 사용할 수 있음! 🚀

1.컴포넌트 스캔방법(스프링이 컴포넌트를 조회하여 객체(빈)으로 등록하는 방법:@Controller, @Service, @Repository가 다 컴포넌트의 일종이다.
@Controller, @Service, @Repository → 스프링이 해당 클래스를 보고 객체(빈)를 생성하여 스프링 컨테이너에 등록함
@Autowired → 스프링 컨테이너에 등록된 객체(빈)들을 서로 연결해 줌 (의존성 주입, DI)

2.작성자가 직접 빈으로 등록하는 방법:SpringConfig클래스를 보자
  여기 예제에서는 컨트롤러를 제외한 메소드를 통해서 서비스와 레포지토리를 빈으로 등록하여 객체들을 연결 사용하는 방법이다.
  